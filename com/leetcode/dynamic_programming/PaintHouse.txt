package com.leetcode;


//Algo:
//DP: For every row starting 1, for every column(color) compute the cost of painting by selecting a paint from column other than current column
// from previous row
class Program {

    public static int minPaintCost(int[][] cost) {
        if(cost == null || cost.length == 0)
            return 0;

        for(int i=1; i<cost.length; i++) {
            cost[i][0] += Math.min(cost[i-1][1], cost[i-1][2]);
            cost[i][1] += Math.min(cost[i-1][0], cost[i-1][2]);
            cost[i][2] += Math.min(cost[i-1][0], cost[i-1][1]);
        }

        int m = cost.length-1;
        return Math.min(Math.min(cost[m][0], cost[m][1]), cost[m][2]);
    }

    public static void main(String[] args) {
    }
}

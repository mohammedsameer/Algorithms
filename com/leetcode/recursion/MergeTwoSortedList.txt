package com.leetcode;

import java.util.List;

/**
 * Algorithm
 * 1. If one of the list is empty, then return the other
 * 2. Compare l1.val and l2.val and recursively call the next node
 */
public class Program {

    public class ListNode {
      int val;
      ListNode next;
      ListNode(int x) { val = x; }
    }

    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
       if(l1 == null)
           return l2;

       if(l2 == null)
           return l1;

       ListNode result;
        if(l1.val < l2.val) {
            result = l1;
            l1 = l1.next;
        } else {
            result = l2;
            l2 = l2.next;
        }

       result.next = mergeTwoLists(l1, l2);
       return result;
    }
}
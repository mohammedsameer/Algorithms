
package com.leetcode;


//Algo:
//Recursion:
//Point node.left = right, node.left = root (aka clockwise rotation)
//Iteration-1: root is last left node
class Program {

    class TreeNode {
        TreeNode left;
        TreeNode right;
        int val;
        public TreeNode(int val, TreeNode left, TreeNode right) {
            this.left = left;
            this.right = right;
            this.val = val;
        }
    }

    public static TreeNode upsideDown(TreeNode root) {
        if(root == null)
            return null;

        TreeNode left = root.left;
        TreeNode right = root.right;
        if(left != null) {
            //Recursively go to the left
            TreeNode result = upsideDown(left);
            //Clockwise rotation
            left.left = right;
            left.right = root;
            //Clean left & right nodes of curr pointer
            root.left = null;
            root.right = null;
            return result;
        }
        return root;
    }

    public static void main(String[] args) {

    }
}
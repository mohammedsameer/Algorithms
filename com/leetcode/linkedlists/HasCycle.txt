/**
 * Algorithm
 * Move two cursors
 * n1 = n1.next, n2 = n2.next.next, if n1 == n2 return true else false
 */
public class Program {

    class ListNode {
        int val;
        ListNode next;
        ListNode(int x) {
            val = x;
            next = null;
        }
    }

    public boolean hasCycle(ListNode head) {
        if(head == null || head.next == null)
            return false;

        ListNode n1 = head;
        ListNode n2 = head;

        while(n1.next != null && n2.next.next != null) {
            n1 = n1.next;
            n2 = n2.next.next;
            //Make sure the matching nodes are not null (E.g: list with single node)
            if(n1 == n2)
                return true;
        }

        return false;
    }

    public static void main(String[] args) {
        System.out.println();
    }
}
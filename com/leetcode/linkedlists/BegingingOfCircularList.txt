package com.leetcode;

/**
 * Given a circular linked list, implement an algorithm which returns node at the beginning of the loop
 * Algo:
 * Move one node twice as fast as the other. If there is a loop, they will meet eventually
 */
public class Program {

    static class Node {
        int data;
        Node next;
        Node(int data) {
            this.data = data;
        }
    }

    private static Node circularList(Node head) {
        if(head == null) {
            return null;
        }
        Node n1 = head;
        Node n2 = head;

        do {
            n1 = n1.next;
            n2 = n2.next.next;
        } while (n1 != n2);
        return n1;
    }

    public static void main(String[] args) {
    }
}
package com.leetcode;
//Algo:
//Recursively check all nodes by performing BST based search i.e. if root.val > target, go to right, if root.val < target, go to left

class Program {
    class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;
        TreeNode(int val) {
            this.val = val;
        }
    }

    double diff = Integer.MAX_VALUE;
    int min = -1;

    public int closestValue(TreeNode root, double target) {
        closestValueHelper(root, target);
        return min;
    }

    public void closestValueHelper(TreeNode root, double target) {
        if(root==null)
            return;

        if(diff > Math.abs(root.val-target)) {
            diff = Math.abs(root.val-target);
            min = root.val;
        }

        if(target > root.val)
            closestValueHelper(root.right, target);
        else
            closestValueHelper(root.left, target);
    }

    public static void main(String[] args) {
        int[] nums = new int[] {1, 2, 3, 4, 5};
    }
}

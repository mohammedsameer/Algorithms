package com.leetcode;

import java.util.Stack;

/**
 * Algorithm
 * 1. Push all nodes until the left most node & then pop node and move to their right
 * 2. On popping check if kCounter == 0
 */
public class Program {

    public class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;
        TreeNode(int x) { val = x; }
     }

    public TreeNode kthSmallest(TreeNode root, int k) {
        if(root == null)
            return root;

        int kCounter  = k;
        Stack<TreeNode> stack = new Stack<>();
        TreeNode curr = root;
        while (!stack.isEmpty() || curr != null) {
            if(curr != null) {
                stack.push(curr);
                curr = curr.left;
            } else {
                TreeNode node = stack.pop();
                if(--kCounter == 0) break;
                //Move the cursor the node's right
                curr = node.right;
            }
        }

        return curr;
    }

    public static void main(String[] args) {
       System.out.println();
    }
}
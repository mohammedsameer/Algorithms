package com.leetcode;

import java.util.Stack;

/**
 * Algorithm
 * 1. Push all nodes until the left most node & then pop node and move to their right
 * 2. On popping check if --k == 0
 */
public class Program {

    public class TreeNode {
        int val;
        TreeNode left;
        TreeNode right;
        TreeNode(int x) { val = x; }
     }

    public TreeNode kthSmallest(TreeNode root, int k) {
        //Inorder traversal
        TreeNode curr = root;
        Stack<TreeNode> stack = new Stack<>();
        int result = -1;

        while(!stack.isEmpty() || curr!=null) {
            if(curr != null) {
                stack.push(curr);
                curr = curr.left;
            } else {
                TreeNode prev = stack.pop();
                k--;
                if(k==0) {
                    result = prev.val;
                    break;
                }
                curr = prev.right;
            }
        }

       return result;
    }

    public static void main(String[] args) {
       System.out.println();
    }
}
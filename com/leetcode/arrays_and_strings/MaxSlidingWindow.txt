package com.leetcode;

/**
 * Algo:
 * 1. For every iteration, maintain a start and end which represents the window size.
 * 2. Loop through subarray b/w start and end to identify the max and store in the array
 */
public class Program {

    public static int[] maxSlidingWindow(int[] nums, int k) {
        if(nums.length == 0)
           return new int[]{};

        int[] maxWindow = new int[nums.length-k+1];
        for(int i=0; i<=nums.length-k; i++) {
            int start = i;
            int end = start+k;
            int max = Integer.MIN_VALUE;
            for(int j=start; j<end; j++) {
                max = Math.max(nums[j], max);
            }
            maxWindow[start] = max;
        }
        return maxWindow;
    }

    public static void main(String[] args) {
        maxSlidingWindow(new int[] {1,3,-1,-3,5,3,6,7}, 3);
    }
}
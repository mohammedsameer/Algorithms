//Algo: Binary search to determine row and the iterate over columns to find a match
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {

        if(matrix.length == 0 || matrix[0].length ==0)
            return false;

        int rows = matrix.length;
        int cols = matrix[0].length;

        //Binary search based solution where in we determine the row to search and then loop through all columns
        int start = 0;
        int end = rows-1;
        while(start<=end) {
            int mid = (start + end)/2;
            if(target >= matrix[mid][0] && target <= matrix[mid][cols-1]) {
                 //Target potentially in mid row
                for(int c=0; c<cols; c++) {
                    if(target == matrix[mid][c])
                        return true;
                }
                return false;
            } else if (target > matrix[mid][0]) {
                 //Target potentially in rows after mid
                start = mid+1;
            } else {
                //Target potentially in rows before mid
                end = mid-1;
            }
        }
        return false;
    }
}
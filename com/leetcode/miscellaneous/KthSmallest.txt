package com.leetcode;

///WTF
/**
 * Algo:
 */
public class Program {


    public static int kthSmallest(int[][] matrix, int k) {
        int n = matrix.length;
        int lo = matrix[0][0], hi = matrix[n - 1][n - 1];
        while (lo <= hi) {
            int mid = lo + (hi - lo) / 2;
            int count = getLessEqual(matrix, mid);
            if (count < k) lo = mid + 1;
            else hi = mid - 1;
        }
        return lo;
    }

    private static int getLessEqual(int[][] matrix, int val) {
        int res = 0;
        int n = matrix.length, i = n - 1, j = 0;
        while (i >= 0 && j < n) {
            if (matrix[i][j] > val) i--;
            else {
                res += i + 1;
                j++;
            }
        }
        return res;
    }

    public static void main(String[] args) {
     int[][] matrix = new int[3][3];
     matrix[0][0] = 1;
     matrix[0][1] = 5;
     matrix[0][2] = 9;
     matrix[1][0] = 10;
     matrix[1][1] = 11;
     matrix[1][2] = 13;
     matrix[2][0] = 12;
     matrix[2][1] = 13;
     matrix[2][2] = 15;

     kthSmallest(matrix, 8);
    }
}
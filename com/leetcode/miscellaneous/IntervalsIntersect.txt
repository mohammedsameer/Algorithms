//Algo:
//Find overlapping interval max start and min end
//Move past element with min end, aka that way

E,g:
A - [1,3][5,8]
B - [2,6]

Pass1:[2,3]
Pass2:[5,6]

class Solution {
    public int[][] intervalIntersection(int[][] A, int[][] B) {
        int i=0;
        int j=0;
        List<int[]> result = new ArrayList<>();
        while(i<A.length && j<B.length) {
            //Overlapping interval aka max start and min end
            int start = Math.max(A[i][0], B[j][0]);
            int end = Math.min(A[i][1], B[j][1]);
            if(start<=end)
                result.add(new int[]{start, end});

            //Remove interval with smallest endpoint
            if(A[i][1] < B[j][1])
                i++;
            else
                j++;
        }

        //Copy result to array
        int index=0;
        int[][] resultArr = new int[result.size()][2];
        for (int[] curr : result) {
            resultArr[index++] = curr;
        }
        return resultArr;
    }
}
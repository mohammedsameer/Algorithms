package com.leetcode;

/**
 * Algorithm
 * 1. Steps keep track of current num[i]
 * 2. If num[i] + i > end i.e. can you jump from current to end then go ahead and jump, else decrease the step
 */
public class Program {

    public static boolean canJump(int[] nums) {
        int maxJump=0;
        int steps=0;

        for(int i=0; i<nums.length; i++) {
            int currJump = i+nums[i];
            //If current jump better than max jump
            if(maxJump<currJump) {
                maxJump=currJump;
                steps=nums[i];
            }

            //You have reached the end
            if(maxJump>=nums.length-1)
                return true;

            //You cant jump any further because you have no steps left
            if(steps<=0)
                return false;

            //Take next step
            steps--;
        }
        return true;
    }

    public static void main(String[] args) {
        System.out.println(canJump(new int[]{2,3,1,1,4}));
    }
}
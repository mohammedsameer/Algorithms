package com.leetcode;


/**
 * Algorithm
 * The idea is to travel along the circuit by filling tank at every gas station
 * gas[i] -> Gas at every station
 * cost[i] -> Amount of gas needed to go from station i to i+1
 * Note: SumGas < SumCost implies we do not have sufficient gas to travel circuit
 * */
public class Program {

    public static int canCompleteCircuit(int[] gas, int[] cost) {
        int sumGas = 0;
        int sumCost = 0;
        //current tank capacity
        int tank = 0;
        int start = 0;

        //Move from one gas station to another
        for(int i = 0; i < gas.length; i++) {
            sumGas += gas[i];
            sumCost += cost[i];
            //Do I have enough gas to go to next station?
            tank += gas[i] - cost[i];

            if(tank < 0) {
                //Reset the start to next station
                start = i +1; //This helps because you may start at a later station and still complete the circuit provided the sumGas > sumCost
                tank = 0;
            }
        }

        if(sumGas < sumCost) {
            return -1;
        } else {
            return start;
        }
    }

    public static void main(String[] args) {
        System.out.println(canCompleteCircuit(new int[]{1,2}, new int[]{2,1}));
    }
}

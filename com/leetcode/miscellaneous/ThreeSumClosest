package com.leetcode;

import java.util.Arrays;

/**
 * Algo:
 * 1. Sort the array
 * 2. Use the technique of three sum, except instead of comparing sum to target
 *  a) Check the sum-target difference & if its < min, then result = sum
 * 3. Increment indexes when sum>target or sum<target
 */
public class Program {
    public static int threeSumClosest(int[] nums, int target) {
        if(nums.length == 0)
            return 0;

        Arrays.sort(nums);
        int min = Integer.MAX_VALUE;
        int result = 0;
        for(int i=0; i<nums.length-2; i++) {
            int j = i+1;
            int k = nums.length -1;
            while (j<k) {
                int sum = nums[i] + nums[j] + nums[k];
                int difference = Math.abs(sum - target);

                if (difference < min) {
                    result = sum;
                    min = difference;
                }

                if (sum > target) {
                    k--;
                } else if (sum < target) {
                    j++;
                } else {
                    return result;
                }
            }
        }

        return result;
    }

   public static void main(String[] args) {
        threeSumClosest(new int[]{-1, 2, 1, -4}, 1);
   }
}

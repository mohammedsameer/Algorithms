package com.leetcode;

import java.util.ArrayList;
import java.util.List;

/**
 * Algorithm
 * 1. Number of elements in a row is equal to rowNumber
 * 2. The boundary elements in every row are 1, all other elements curr.add(index, prev.get(index - 1) + prev.get(index))
 */
public class Program {

    public static List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<>();
        if(numRows < 0)
            return null;

        if(numRows == 0)
            return new ArrayList<>();

        List<Integer> curr = new ArrayList<>();
        curr.add(1);
        result.add(curr);

        for(int r = 1; r < numRows; r ++) {
            //Number of elements in every level is equal to row number
            curr = new ArrayList<>();
            //initialize boundaries
            List<Integer> prev = result.get(r - 1);
            for(int index = 0; index <= r; index++) {
                if(index == 0 || index == r)
                    curr.add(index, 1);
                else
                    curr.add(index, prev.get(index - 1) + prev.get(index));
            }
            result.add(curr);
        }

        return result;
    }

    public static void main(String[] args) {
       System.out.println(generate(3));
    }
}
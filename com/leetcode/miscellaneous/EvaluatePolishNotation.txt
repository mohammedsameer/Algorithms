package com.leetcode;

import java.util.Stack;

/**
 * Algorithm (Postfix expression)
 * 1. When its an operand add on top of stack
 * 2. When its an operator pop two operands from stack and evaluate
 */
public class Program {

    public int evalRPN(String[] tokens) {

        if(tokens.length == 0)
            return -1;

        Stack<Integer> stack = new Stack<>();
        for(String str : tokens) {
            if(str.length() > 1 /*Any string > 1 is number*/ ||
                     str.charAt(0) >= '0' && str.charAt(0) <= '9') {
                //Add operands on top of stack
                stack.push(Integer.valueOf(str));
            } else {
                //Pop two numbers (aka operands) of stack and apply operator
                int num2 = stack.pop();
                int num1 = stack.pop();
                int result = 0;
                switch (str) {
                    case "+":
                        result = num1 + num2;
                        break;
                    case "-":
                        result = num1 - num2;
                        break;
                    case "*":
                        result = num1 * num2;
                        break;
                    case "/":
                        result = num1 / num2;
                        break;
                    default:
                        break;
                }
                stack.push(result);
            }
        }
        return stack.peek();
    }

    public static void main(String[] args) {
        System.out.println();
    }
}
public class Solution {
    public int minPathSum(int[][] grid) {
        
        if(grid==null|| grid.length==0|| grid[0].length==0)
         return -1;
         
        int rows = grid.length;
        int cols = grid[0].length;
        int curr = 0;
        
        return minPathSumHelper(grid, 0, 0, rows, cols, curr);
    }
    
    public int minPathSumHelper(int[][] grid, int r, int c, int rows, int cols, int curr)
    {
        if(r>=rows || c>=cols)    
         return 0;
        
        curr += grid[r][c];
        if(r==rows-1 && c ==cols-1)
         return curr;
        
        return Math.min(minPathSumHelper(grid, r+1, c, rows, cols, curr), minPathSumHelper(grid, r, c+1, rows, cols, curr));
    }
}
package com.leetcode;

/**
 * LinkedList Cycle's beginning node
 * 1.Use two cursors slow and fast
 * 2. slow = slow.next, fast = fast.nex.next, loop until they meet (Always within loop) it confirms cycle
 * 3. Reset slow or fast and move them one node at a time and it will meet at the beginning of cycle
 */
public class Program {

    static class Node {
        int data;
        Node next;
        Node(int data) {
            this.data = data;
        }
    }

    public Node linkedListCyle(Node head) {
        if(head == null)
            return head;

        Node slow = head;
        Node fast = head;

        while (fast.next != null && fast.next.next != null) {
            slow = slow.next;
            fast = fast.next.next;

            if(slow == fast)
                break;
        }

        //Invalid list
        if(slow != fast)
            return null;

        slow = head;
        while (slow != fast) {
            slow = slow.next;
            fast = fast.next;
        }

        return slow;
    }
}
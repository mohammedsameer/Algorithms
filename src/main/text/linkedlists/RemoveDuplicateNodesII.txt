
//Another idea by moving cursor https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/discuss/28335/My-accepted-Java-code
//Algo:
//Point prev to curr only if curr is non-duplicate node
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode preHead = new ListNode(-1);
        ListNode prev = preHead;
        ListNode curr = head;
        prev.next = curr;

        if(head == null || head.next==null)
            return head;

        while(curr != null) {
            while(curr.next != null && curr.val == curr.next.val) {
                //Match nodes, so skip them
                curr = curr.next;
            }

            if(prev.next == curr) {
                //Prev is correctly pointing to non-duplicate curr
                prev = prev.next;
            } else {
                //Skip the duplicate curr and point to next node
                prev.next = curr.next;
            }
            curr = curr.next;
        }

        return preHead.next;
    }
}
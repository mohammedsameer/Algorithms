package com.leetcode;

//Algo:
//Track rows and cols in an array
//Track diagonal and anti-diagonal in variable
// For every move increase or decrease count depending on player & check if we have a winner
class Program {

    public class TicTacToe {

        int n;
        int[] rows;
        int[] cols;
        int diag;
        int xdiag;

        /** Initialize your data structure here. */
        public TicTacToe(int n) {
            this.n = n;
            rows = new int[n];
            cols = new int[n];
            diag = 0;
            xdiag = 0;
        }

        /** Player {player} makes a move at ({row}, {col}).
         @param row The row of the board.
         @param col The column of the board.
         @param player The player, can be either 1 or 2.
         @return The current winning condition, can be either:
         0: No one wins.
         1: Player 1 wins.
         2: Player 2 wins. */
        public int move(int row, int col, int player) {
            //Variable to keep track of player
            int count = player == 1 ? 1 : -1;

            //Make the move on respective row and col
            rows[row] += count;
            cols[col] += count;

            //Track if move diagonal or anti-diagonal
            if (row == col)
                diag +=count;

            if (row + col == n-1)
                xdiag += count;

            //Check if we have a winner
            if(Math.abs(rows[row]) == n
                    || Math.abs(cols[col]) == n
                    || Math.abs(diag) == n
                    || Math.abs(xdiag) == n)
                return count > 0 ? 1 : 2;

            //No one wins
            return 0;
        }
    }


    public static void main(String[] args) {
    }
}

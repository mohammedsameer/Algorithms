package com.leetcode;

import java.util.ArrayList;
import java.util.List;

/**
 * Algorithm
 * 1. Number of elements in a row is equal to rowNumber
 * 2. The boundary elements in every row are 1, all other elements curr.add(index, prev.get(index - 1) + prev.get(index))
 */
public class Program {

    public static List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> currRow = new ArrayList<>();

        if(numRows<=0)
            return result;

        currRow.add(1);
        result.add(currRow);
        //index to track rows
        int n = 1;
        while(n<numRows) {
            n++;
            List<Integer> prevRow = new ArrayList<>(currRow);
            currRow = new ArrayList<>();
            for(int i=0; i<n; i++) {
                if(i==0 || i==prevRow.size()) {
                     //Boundary index
                    currRow.add(1);
                } else {
                    //Add elements from previous row
                    currRow.add(prevRow.get(i-1) + prevRow.get(i));
                }
            }

            result.add(currRow);
        }

        return result;
    }

    public static void main(String[] args) {
       System.out.println(generate(3));
    }
}
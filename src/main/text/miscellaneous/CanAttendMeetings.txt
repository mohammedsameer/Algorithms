package com.leetcode;

import java.util.Arrays;
import java.util.Comparator;

/**
 * Algo:
 * 1. Sort intervals on start time
 * 2. Iterate and check if end time of first interval overlaps with start time of next
 */
public class Program {

    public static class Interval {
        int start;
        int end;

        Interval(int start, int end) {
            this.start = start;
            this.end = end;
        }
    }

    public static boolean canAttendMeetings(Interval[] intervals) {
        boolean result = false;
        Comparator<Interval> intervalComparator = (i1, i2) -> {
            return i1.start - i2.start;
        };

        Arrays.sort(intervals, intervalComparator);

        for(int i = 0; i < intervals.length -1 ; i++) {
            if(intervals[i].end > intervals[i+1].start)
                return false;
        }

        return true;
    }

    public static void main(String[] args) {
        Interval i1 = new Interval(5,10);
        Interval i2 = new Interval(15,20);
        canAttendMeetings(new Interval[] {i1, i2});
    }
}
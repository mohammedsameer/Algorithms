package com.leetcode;

/**
 * Algorithm
 * 1. Iterate through the array and track min stock value
 * 2. Compute the profit by performing prices[i]-min
 * Note: Maximize the profit
 */
public class Program {
  
 public static int maxProfit(int[] prices) {
      if(prices.length==0)
           return 0;

       int minBuy =  Integer.MAX_VALUE;
       int maxProfit = 0;
       for(int i=0; i<prices.length; i++) {
           //Compute if current buy is cheapest
           minBuy = Math.min(prices[i], minBuy);
           //Compute if prices[i]-minBuy i.e. diff of current price and min
           int currDiff = prices[i] - minBuy;
           //Compute maxProfit
           maxProfit = Math.max(maxProfit, currDiff);
       }

       return maxProfit;
   }
  
  public static void main(String[] args) {
   System.out.println();
  }
}

// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
//Algo:
//Maintain an next integer at the next element always, thus allowing O(1) peek lookup
class PeekingIterator implements Iterator<Integer> {

    Integer next;
    Iterator<Integer> myIterator;

	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
	    this.myIterator = iterator;
        next = myIterator.hasNext() ? myIterator.next() : null;
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
       return next;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
	    int result = next;
        next = myIterator.hasNext() ? myIterator.next() : null;
        return result;
	}

	@Override
	public boolean hasNext() {
	  return next != null;
	}
}

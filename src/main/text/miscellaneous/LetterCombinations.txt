package com.leetcode;


import java.util.ArrayList;
import java.util.List;

/**
 * Algorithm
 * 1. Start with empty set
 * 2. Append every character of given digit to current result set, repeat this for every digit
 * Note: This is combination
 */
public class Program {

    public static List<String> letterCombinations(String digits) {
        if(digits.isEmpty())
            return new ArrayList<>();

        String[] digitToAlpha = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        List<String> result = new ArrayList<>();
        result.add("");

        for(int i = 0; i < digits.length(); i ++) {
            //Get every digit string
            String currDigit = digitToAlpha[digits.charAt(i) - '0'];
            List<String> currResult = new ArrayList<>();
            for(String curr : result) {
                //Get every current result string
                for(Character c : currDigit.toCharArray()) {
                    //Apply the new character of current digit to every current result
                    currResult.add(curr + c);
                }
            }
            result = currResult;
         }
         return result;
    }

    public static void main(String[] args) {
        System.out.println(letterCombinations("23"));
    }
}
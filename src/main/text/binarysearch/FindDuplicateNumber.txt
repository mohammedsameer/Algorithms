package com.leetcode;


/**
 * Algo:
 * 1. Binary search on 1..n
 * 2. Compute the number of occurance of mid in arr, if count > mid then duplicate in first half (end=mid) else duplicate in second half (start=mid+1)
 */
public class Program {

    public static int findDuplicate(int[] nums) {
        int start = 1;
        int end = nums.length-1;

        while(start<end) {
            int mid = (start+end)/2;
            int count = 0;
            for(int num : nums) {
                if (num <= mid)
                    count++;
            }


            if(count > mid)
                end = mid; //If count of elements is greater than mid then duplicate in first half
            else
                start = mid+1; //If count of elements is smaller than mid then duplicate in second half
        }

        return start;
    }

    public static void main(String[] args) {
        findDuplicate(new int[] {1, 2, 2, 3});
    }
}
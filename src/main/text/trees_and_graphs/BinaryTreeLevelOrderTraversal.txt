package com.leetcode;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * Algorithm
 */
public class Program {

 public class TreeNode {
      int val;
      TreeNode left;
      TreeNode right;
      TreeNode(int x) { val = x; }
 }

    public List<List<Integer>> levelOrder(TreeNode root) {
     if(root == null)
         return new ArrayList<>();

     List<List<Integer>> result = new ArrayList<>();
     List<Integer> nextResult = new ArrayList<>(Arrays.asList(root.val));
     List<TreeNode> currLevel = new ArrayList<>(Arrays.asList(root));
     List<TreeNode> nextLevel;
     result.add(nextResult);

     while (!currLevel.isEmpty()) {
         nextResult = new ArrayList<>();
         nextLevel = new ArrayList<>();
         for(TreeNode node: currLevel) {
             if(node.left != null) {
                 nextResult.add(node.left.val);
                 nextLevel.add(node.left);
             }

             if(node.right != null) {
                 nextResult.add(node.right.val);
                 nextLevel.add(node.right);
             }
         }

         if(!nextResult.isEmpty()) {
             result.add(nextResult);
         }

         //Reset current level as next level
         currLevel = nextLevel;
        }
        return result;
    }

    public static void main(String[] args) {
       System.out.println();
    }
}
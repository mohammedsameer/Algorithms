package com.leetcode;


//Algo:
//1. If any number in the range has a bit value zero for given index then result is zero
//2. Idea:
// a) Move m & n to the right untill they match i.e. when they dont match then we have atleast one zero in range between m & n,
// thus keep track of zero counter
// b) Move m or n by number of zero bits to left,

class Program {

     public static int rangeBitwiseAnd(int m, int n) {
            if(m == 0 || n == 0){
                return 0;
            }

            int countZeroBits = 0;
            while(m != n){
                m >>= 1;
                n >>= 1;
                countZeroBits++;
            }
            return m << countZeroBits;
        }

    public static void main(String[] nums) {
        rangeBitwiseAnd(5, 7);
    }
}
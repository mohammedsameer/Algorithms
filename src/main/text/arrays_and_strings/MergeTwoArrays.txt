package com.leetcode;

/**
 * Algo
 * Copy elements from the end of both arrays
 * Note: If all elements in num2 are larger than num1, they are copied at the end and no need to
 * copy remainder as num1 elements are already inplace. But copy num2 elements if they are all smaller than num1 elements
 */
public class Program {

        public static void merge(int[] nums1, int m, int[] nums2, int n) {
            if(m==0 && n==0)
                return;

            //Result array
            int resultIndex = nums1.length - 1;
            int mIndex = m - 1;
            int nIndex = n - 1;

            //Copy from the end of both arrays
            while (mIndex >=0 && nIndex >=0) {
                if(nums1[mIndex] > nums2[nIndex]) {
                    nums1[resultIndex] = nums1[mIndex];
                    mIndex--;
                } else {
                    nums1[resultIndex] = nums2[nIndex];
                    nIndex--;
                }
                resultIndex--;
            }

            //Copy any remainder elements from num2 into num1
            while (nIndex >=0) {
                nums1[resultIndex] = nums2[nIndex];
                resultIndex--;
                nIndex--;
            }
        }

    public static void main(String[] args) {
        int[] result = merge(new int[] {7, 8, 9, 10, -1, -1, -1},  3, new int[] {1,2,3}, 3);
        System.out.println(result);
    }
}
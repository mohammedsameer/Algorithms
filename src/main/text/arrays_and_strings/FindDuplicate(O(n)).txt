package com.leetcode;

/**
 * 1. Use two pointers slow and fast
 * 2. Move slow and fast such that slow = nums[slow] and fast = nums[nums[fast]]
 * 3. Reset the slow or fast and move them slow = nums[slow], fast = nums[fast] until they meet on duplicate
 */
public class Program {

    public static int findDuplicate(int[] nums) {

        if(nums.length == 0)
            return -1;

        int slow = nums[0];
        int fast = nums[nums[0]];

        while (slow != fast) {
            slow = nums[slow];
            fast = nums[nums[fast]];
        }

        slow = 0;
        while (slow != fast) {
            slow = nums[slow];
            fast = nums[fast];
        }

        return slow;
    }

    public static void main(String[] args) {
        findDuplicate(new int[] {1,3,4,2,2});
    }
}
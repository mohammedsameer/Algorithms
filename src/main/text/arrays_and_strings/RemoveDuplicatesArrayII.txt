
package com.leetcode;


/**
 * Algorithm:
 * 1. Maintain index & current count
 * 2. Loop through array from 1 to n-1
 *  a) Keep track of current count
 *  b) Only copy elements over if the current index<=2, otherwise skip the copy (Note: Copy here is not a swap but simple override of index)
 * 3. Return index+1
 */
public class Program {
    public static int removeDuplicates(int[] nums) {
        int index = 0;
        if(nums.length == 0)
            return index;

        int currentCount = 1;
        for(int i=1; i<nums.length; i++) {
            if(nums[index] == nums[i]) {
                //Matching next character
                currentCount++;
            } else {
                //Non-matching next character
                currentCount = 1;
            }

            //Copy elements over only if current count <=2
            if(currentCount <=2)
                nums[++index] = nums[i];

        }

        return index+1;
    }

    /**
     * The main method.
     *
     * @param args the arguments
     */
    public static void main(String[] args) {
        removeDuplicates(new int[] {0,0,1,1,1,1,2,3,3});
    }
}
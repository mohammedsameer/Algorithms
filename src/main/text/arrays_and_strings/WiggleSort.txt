package com.leetcode;
//Algo:
//a) 1,2,3,4,5 -> 1,3,2,5,4 aka 1 < 3 > 2 < 5 > 4 b) 1, 2, 3, 0, 7 -> 1 < 2 > 0 < 7 > 3
//Loop through elements and at every index determine if current element satisfies criteria with previous element and accordingly adjust
class Program {
    public static void wiggleSort(int[] nums) {
        if(nums == null || nums.length == 0)
            return;

        for(int i=1; i<nums.length; i++) {

            if(i%2==1) {
                //Odd index elements should be greater than their surroundings
                if (nums[i] < nums[i - 1]) {
                    swap(nums, i, i-1);
                }

            } else {
                //Even index elements should be smaller than their surroundings
                if (nums[i] > nums[i-1]) {
                    swap(nums, i, i-1);
                }
            }
        }
    }

    public static void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }

    public static void main(String[] args) {
        int[] nums = new int[] {1, 2, 3, 4, 5};
        wiggleSort(nums);
        System.out.println(nums.length);
    }
}
